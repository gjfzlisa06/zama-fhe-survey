/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { SurveyFHE, SurveyFHEInterface } from "../../contracts/SurveyFHE";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldDecrypter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newDecrypter",
        type: "address",
      },
    ],
    name: "DecrypterChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "text",
        type: "string",
      },
    ],
    name: "EncryptedQuestionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "EncryptedResponseSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "totalResponses",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "sum",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "average",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "highest",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "lowest",
        type: "uint8",
      },
    ],
    name: "PlainStatsPublished",
    type: "event",
  },
  {
    inputs: [],
    name: "admin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_text",
        type: "string",
      },
      {
        internalType: "externalEuint32",
        name: "_initialLowest",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
    ],
    name: "createEncryptedQuestion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decrypter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEncryptedQuestionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getEncryptedQuestionStats",
    outputs: [
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
      {
        internalType: "euint32",
        name: "total",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "sum",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "highest",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "lowest",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getPlainStats",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "totalResponses",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "sum",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "average",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "highest",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "lowest",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "plainStats",
    outputs: [
      {
        internalType: "uint32",
        name: "totalResponses",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "sum",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "average",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "highest",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "lowest",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_totalResponses",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_sum",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "_average",
        type: "uint32",
      },
      {
        internalType: "uint8",
        name: "_highest",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "_lowest",
        type: "uint8",
      },
    ],
    name: "publishPlainStats",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "questions",
    outputs: [
      {
        internalType: "string",
        name: "text",
        type: "string",
      },
      {
        internalType: "euint32",
        name: "total",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "sum",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "highest",
        type: "bytes32",
      },
      {
        internalType: "euint32",
        name: "lowest",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_decrypter",
        type: "address",
      },
    ],
    name: "setDecrypter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "externalEuint32",
        name: "_encScore",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_scoreProof",
        type: "bytes",
      },
      {
        internalType: "externalEuint32",
        name: "_encOne",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_oneProof",
        type: "bytes",
      },
    ],
    name: "submitEncryptedResponse",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561000f575f80fd5b5061018a6100ae604080516080810182525f808252602082018190529181018290526060810191909152506040805160808101825273687820221192c5b662b25367f70076a37bc79b6c815273848b0066793bcc60346da1f49049357399b8d595602082015273a02cda4ca3a71d7c46997716f4283aa851c2881291810191909152731364cbbf2cdf5032c47d8226a6f6fbd2afcdacac606082015290565b80517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970080546001600160a01b03199081166001600160a01b039384161790915560208301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497018054831691841691909117905560408301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497028054831691841691909117905560608301517f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497038054909216921691909117905550565b5f80546001600160a01b0319163317905561175e806101a85f395ff3fe608060405234801561000f575f80fd5b50600436106100cf575f3560e01c8063b588a07e1161007d578063d94daa9511610058578063d94daa9514610319578063da1f12ab1461032c578063f851a44014610334575f80fd5b8063b588a07e14610234578063b5ad3aa214610247578063c8e7c9e31461025a575f80fd5b806371989ddc116100ad57806371989ddc146101e95780639d419b841461020d5780639f6e3e0414610222575f80fd5b806318480740146100d357806331b1b9781461019957806350dc7eb1146101be575b5f80fd5b6101556100e13660046111fa565b5f9081526003602052604090205460ff6e010000000000000000000000000000820481169263ffffffff808416936401000000008104821693680100000000000000008204909216926c0100000000000000000000000082048316926d010000000000000000000000000090920490911690565b60408051961515875263ffffffff9586166020880152938516938601939093529216606084015260ff91821660808401521660a082015260c0015b60405180910390f35b6101ac6101a73660046111fa565b610346565b60405161019096959493929190611254565b6001546101d1906001600160a01b031681565b6040516001600160a01b039091168152602001610190565b6101fc6101f73660046111fa565b610417565b604051610190959493929190611291565b61022061021b3660046112ef565b61053d565b005b6002545b604051908152602001610190565b6102206102423660046113b1565b6107d1565b61022061025536600461148b565b610938565b6102d86102683660046111fa565b60036020525f908152604090205463ffffffff808216916401000000008104821691680100000000000000008204169060ff6c0100000000000000000000000082048116916d010000000000000000000000000081048216916e0100000000000000000000000000009091041686565b6040805163ffffffff97881681529587166020870152939095169284019290925260ff908116606084015216608082015290151560a082015260c001610190565b6102206103273660046114b8565b6109e7565b612711610226565b5f546101d1906001600160a01b031681565b60028181548110610355575f80fd5b905f5260205f2090600602015f91509050805f0180546103749061153e565b80601f01602080910402602001604051908101604052809291908181526020018280546103a09061153e565b80156103eb5780601f106103c2576101008083540402835291602001916103eb565b820191905f5260205f20905b8154815290600101906020018083116103ce57829003601f168201915b505050600184015460028501546003860154600487015460059097015495969295919450925060ff1686565b60605f805f8060028054905086106104665760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b60448201526064015b60405180910390fd5b5f6002878154811061047a5761047a611576565b905f5260205f2090600602019050805f0181600101548260020154836003015484600401548480546104ab9061153e565b80601f01602080910402602001604051908101604052809291908181526020018280546104d79061153e565b80156105225780601f106104f957610100808354040283529160200191610522565b820191905f5260205f20905b81548152906001019060200180831161050557829003601f168201915b50505050509450955095509550955095505091939590929450565b6001546001600160a01b03166105955760405162461bcd60e51b815260206004820152601160248201527f446563727970746572206e6f7420736574000000000000000000000000000000604482015260640161045d565b6001546001600160a01b031633146105ef5760405162461bcd60e51b815260206004820152600e60248201527f4f6e6c7920646563727970746572000000000000000000000000000000000000604482015260640161045d565b60025486106106305760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b604482015260640161045d565b6040518060c001604052808663ffffffff1681526020018563ffffffff1681526020018463ffffffff1681526020018360ff1681526020018260ff1681526020016001151581525060035f8881526020019081526020015f205f820151815f015f6101000a81548163ffffffff021916908363ffffffff1602179055506020820151815f0160046101000a81548163ffffffff021916908363ffffffff1602179055506040820151815f0160086101000a81548163ffffffff021916908363ffffffff1602179055506060820151815f01600c6101000a81548160ff021916908360ff1602179055506080820151815f01600d6101000a81548160ff021916908360ff16021790555060a0820151815f01600e6101000a81548160ff021916908315150217905550905050857f643415994cc797b044529c3b2f6c538d55a35772890c87736f82e44b0530dae686868686866040516107c195949392919063ffffffff9586168152938516602085015291909316604083015260ff9283166060830152909116608082015260a00190565b60405180910390a2505050505050565b5f546001600160a01b031633146108175760405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b604482015260640161045d565b5f6108578484848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610ca492505050565b6002805460019081018083555f9283529293509091610876919061158a565b90505f6002828154811061088c5761088c611576565b5f91825260209091206006909102019050806108a888826115f5565b506004810183905560058101805460ff191660011790556108c883610cba565b506001546001600160a01b0316156108f75760048101546001546108f591906001600160a01b0316610cc9565b505b817fab92c0af1252d3317372f44be0ead0ab2b39dcd475d1ceb1958167f90d3afe728860405161092791906116b5565b60405180910390a250505050505050565b5f546001600160a01b0316331461097e5760405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b604482015260640161045d565b600180546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681179093556040519116919082907f850e738ab896cc2bd83b6dc395140703f1af0bd426c433bd6ab36ae3eb67c63b905f90a35050565b6002548710610a285760405162461bcd60e51b815260206004820152600d60248201526c092dcecc2d8d2c840d2dcc8caf609b1b604482015260640161045d565b5f60028881548110610a3c57610a3c611576565b5f9182526020909120600690910201600581015490915060ff16610aa25760405162461bcd60e51b815260206004820152601760248201527f5175657374696f6e20646f6573206e6f74206578697374000000000000000000604482015260640161045d565b5f610ae28888888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610ca492505050565b90505f610b248686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610ca492505050565b9050610b34836002015483610cdb565b60028401556001830154610b489082610cdb565b60018401556003830154610b5c9083610d09565b60038401556004830154610b709083610d37565b60048401556002830154610b8390610cba565b50610b918360010154610cba565b50610b9f8360030154610cba565b50610bad8360040154610cba565b50610bbc836002015433610cc9565b50610bcb836001015433610cc9565b50610bda836003015433610cc9565b50610be9836004015433610cc9565b506001546001600160a01b031615610c6c576002830154600154610c1691906001600160a01b0316610cc9565b506001808401549054610c3291906001600160a01b0316610cc9565b506003830154600154610c4e91906001600160a01b0316610cc9565b506004830154600154610c6a91906001600160a01b0316610cc9565b505b60405133908b907f9452b3d8f969c9233ea878b974af6494cc2fdd9d3380aad76a2acd044e6fadfd905f90a350505050505050505050565b5f610cb183836004610d65565b90505b92915050565b5f610cc58230610e85565b5090565b5f610cd48383610e85565b5090919050565b5f82610ced57610cea5f610f0e565b92505b81610cfe57610cfb5f610f0e565b91505b610cb183835f610f20565b5f82610d1b57610d185f610f0e565b92505b81610d2c57610d295f610f0e565b91505b610cb183835f611003565b5f82610d4957610d465f610f0e565b92505b81610d5a57610d575f610f0e565b91505b610cb183835f6110a0565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163196d0b9b60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b039091169063196d0b9b90610dde9088903390899089906004016116e7565b6020604051808303815f875af1158015610dfa573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e1e9190611726565b8154604051630f8e573b60e21b8152600481018390523360248201529193506001600160a01b031690633e395cec906044015f604051808303815f87803b158015610e67575f80fd5b505af1158015610e79573d5f803e3d5ffd5b50505050509392505050565b5f7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497008054604051635ca4b5b160e11b8152600481018690526001600160a01b03858116602483015292935091169063b9496b62906044015f604051808303815f87803b158015610ef3575f80fd5b505af1158015610f05573d5f803e3d5ffd5b50505050505050565b5f610cb48263ffffffff16600461113d565b5f808215610f335750600160f81b610f36565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e46497015460405163022f65e760e31b815260048101879052602481018690526001600160f81b0319831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b03169063117b2f38906064015b6020604051808303815f875af1158015610fd5573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ff99190611726565b9695505050505050565b5f8082156110165750600160f81b611019565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051630d8c635960e21b815260048101879052602481018690526001600160f81b0319831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0316906336318d6490606401610fb9565b5f8082156110b35750600160f81b6110b6565b505f5b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649701546040516304559f7160e01b815260048101879052602481018690526001600160f81b0319831660448201527f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0316906304559f7190606401610fb9565b7f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e464970154604051639cd07acb60e01b81525f917f9e7b61f58c47dc699ac88507c4f5bb9f121c03808c5676a8078fe583e4649700916001600160a01b0390911690639cd07acb906111b2908790879060040161173d565b6020604051808303815f875af11580156111ce573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111f29190611726565b949350505050565b5f6020828403121561120a575f80fd5b5035919050565b5f81518084525f5b8181101561123557602081850181015186830182015201611219565b505f602082860101526020601f19601f83011685010191505092915050565b60c081525f61126660c0830189611211565b602083019790975250604081019490945260608401929092526080830152151560a090910152919050565b60a081525f6112a360a0830188611211565b90508560208301528460408301528360608301528260808301529695505050505050565b803563ffffffff811681146112da575f80fd5b919050565b803560ff811681146112da575f80fd5b5f805f805f8060c08789031215611304575f80fd5b86359550611314602088016112c7565b9450611322604088016112c7565b9350611330606088016112c7565b925061133e608088016112df565b915061134c60a088016112df565b90509295509295509295565b634e487b7160e01b5f52604160045260245ffd5b5f8083601f84011261137c575f80fd5b50813567ffffffffffffffff811115611393575f80fd5b6020830191508360208285010111156113aa575f80fd5b9250929050565b5f805f80606085870312156113c4575f80fd5b843567ffffffffffffffff808211156113db575f80fd5b818701915087601f8301126113ee575f80fd5b81358181111561140057611400611358565b604051601f8201601f19908116603f0116810190838211818310171561142857611428611358565b816040528281528a6020848701011115611440575f80fd5b826020860160208301375f60208483010152809850505050602087013594506040870135915080821115611472575f80fd5b5061147f8782880161136c565b95989497509550505050565b5f6020828403121561149b575f80fd5b81356001600160a01b03811681146114b1575f80fd5b9392505050565b5f805f805f805f60a0888a0312156114ce575f80fd5b8735965060208801359550604088013567ffffffffffffffff808211156114f3575f80fd5b6114ff8b838c0161136c565b909750955060608a0135945060808a013591508082111561151e575f80fd5b5061152b8a828b0161136c565b989b979a50959850939692959293505050565b600181811c9082168061155257607f821691505b60208210810361157057634e487b7160e01b5f52602260045260245ffd5b50919050565b634e487b7160e01b5f52603260045260245ffd5b81810381811115610cb457634e487b7160e01b5f52601160045260245ffd5b601f8211156115f057805f5260205f20601f840160051c810160208510156115ce5750805b601f840160051c820191505b818110156115ed575f81556001016115da565b50505b505050565b815167ffffffffffffffff81111561160f5761160f611358565b6116238161161d845461153e565b846115a9565b602080601f831160018114611656575f841561163f5750858301515b5f19600386901b1c1916600185901b1785556116ad565b5f85815260208120601f198616915b8281101561168457888601518255948401946001909101908401611665565b50858210156116a157878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b602081525f610cb16020830184611211565b605481106116e357634e487b7160e01b5f52602160045260245ffd5b9052565b8481526001600160a01b0384166020820152608060408201525f61170e6080830185611211565b905061171d60608301846116c7565b95945050505050565b5f60208284031215611736575f80fd5b5051919050565b828152604081016114b160208301846116c756fea164736f6c6343000818000a";

type SurveyFHEConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SurveyFHEConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SurveyFHE__factory extends ContractFactory {
  constructor(...args: SurveyFHEConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SurveyFHE & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SurveyFHE__factory {
    return super.connect(runner) as SurveyFHE__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SurveyFHEInterface {
    return new Interface(_abi) as SurveyFHEInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): SurveyFHE {
    return new Contract(address, _abi, runner) as unknown as SurveyFHE;
  }
}
